networks:
  task-tracker-network:
    name: task-tracker-network

services:

  backend:
    restart: always
    container_name: backend_cont
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/:/backend
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
      DATABASE_URL: 'postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}'
    networks:
      - task-tracker-network
    depends_on:
      - setup_postgres

  postgres:
    restart: always
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 20s
      timeout: 20s
      retries: 5
    networks:
      - task-tracker-network

  setup_postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
    command: >
      bash -c '
        export PGPASSWORD="${POSTGRES_PASSWORD}"
        until psql -lqt -U ${POSTGRES_USER} -w -h ${POSTGRES_USER} -p 5432 | cut -d \| -f 1 | grep -qw "${POSTGRES_DB}"
        do
          echo "Create DB ${POSTGRES_DB}"
          createdb "${POSTGRES_DB}" -U "${POSTGRES_USER}" -w -h postgres -p 5432
          sleep 1
        done
        echo "DB ${POSTGRES_DB} exist"
      '
    networks:
      - task-tracker-network

volumes:
  postgres_data:
